name: Release Helm Chart

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4

      - name: Package Helm Chart
        id: package
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          helm package . --version $VERSION --app-version $VERSION
          CHART_FILE=$(ls *.tgz)
          echo "chart_file=$CHART_FILE" >> $GITHUB_OUTPUT
          echo "Packaged: $CHART_FILE"

      - name: Checkout gh-pages branch
        run: |
          git fetch origin gh-pages
          git checkout gh-pages

      - name: Download existing index.yaml
        run: |
          # Пытаемся скачать существующий index.yaml если есть
          curl -f -L -o index.yaml "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/index.yaml" || echo "No existing index.yaml, will create new"

      - name: Copy chart package
        run: |
          # Копируем chart из рабочей директории предыдущего шага
          cp $GITHUB_WORKSPACE/*.tgz ./
          ls -la

      - name: Update Helm repository index
        run: |
          helm repo index . --url https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}
          cat index.yaml

      - name: Commit and push to gh-pages
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add .
          git commit -m "Add chart version ${{ github.ref_name }}"
          git push origin gh-pages

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4

      - name: Lint Helm Chart
        run: helm lint .

      - name: Test template rendering
        run: helm template test . --debug
